version: "3.8"
networks:
  loki:

services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki

  user-svc:
    build:
      context: ..
      dockerfile: dockerfile
    image: caspfh/user-serviceapi:latest
    ports:
      - "5289:8081"
    expose: 
      - "8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - connectionString=mongodb://admin:1234@mongodb:27017/
      - database=catalogDB
      - collection=catalogCol

    networks:
      - loki
    depends_on:
      - loki

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-svc
    ports:
      - "4100:4100"
    networks:
      - loki

  mongodb:
    image: mongo:latest
    hostname: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=1234
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27018:27017"
    networks: 
      - loki

volumes:
  mongodbdata: